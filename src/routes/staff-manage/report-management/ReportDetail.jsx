import { useEffect, useState } from "react";
import { useParams, Link } from "react-router-dom";
import { useTheme } from "../../../hooks/use-theme";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const ReportDetail = () => {
  const { id } = useParams(); // L·∫•y ID b√°o c√°o t·ª´ URL
  const theme = useTheme();
  const [report, setReport] = useState(null);
  const [user, setUser] = useState(null);
  const [booking, setBooking] = useState(null);
  const [loading, setLoading] = useState(true);

  // Fetch d·ªØ li·ªáu t·ª´ API
  useEffect(() => {
    const fetchReportDetail = async () => {
      try {
        // üü¢ 1. Fetch report
        const reportRes = await fetch(`http://localhost:5000/reports/${id}`);
        const reportData = await reportRes.json();
        if (!reportData) throw new Error("Kh√¥ng t√¨m th·∫•y b√°o c√°o!");

        setReport(reportData);

        // üü¢ 2. Fetch user (ng∆∞·ªùi g·ª≠i b√°o c√°o)
        const userRes = await fetch(`http://localhost:5000/users/${reportData.userId}`);
        const userData = await userRes.json();
        setUser(userData);

        // üü¢ 3. Fetch booking (li√™n quan ƒë·∫øn b√°o c√°o)
        const bookingRes = await fetch(`http://localhost:5000/bookings/${reportData.bookingId}`);
        const bookingData = await bookingRes.json();
        setBooking(bookingData);
      } catch (error) {
        console.error("L·ªói khi l·∫•y d·ªØ li·ªáu b√°o c√°o:", error);
        toast.error("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu b√°o c√°o!");
      } finally {
        setLoading(false);
      }
    };

    fetchReportDetail();
  }, [id]);

  if (loading) return <p className="text-center text-lg font-bold">ƒêang t·∫£i d·ªØ li·ªáu...</p>;
  if (!report) return <p className="text-red-500 text-center">Kh√¥ng t√¨m th·∫•y b√°o c√°o!</p>;

  return (
    <div className={`flex justify-center items-center min-h-screen p-6 ${theme === "dark" ? "bg-black text-white" : ""}`}>
      <ToastContainer />
      <div className="w-full max-w-2xl border p-6 rounded-lg shadow-lg dark:bg-gray-900">
        
        {/* Header */}
        <h2 className="text-2xl font-bold mb-4 text-center">Chi ti·∫øt b√°o c√°o</h2>

        {/* Ng∆∞·ªùi b√°o c√°o */}
        <div className="flex items-center gap-4 mb-6">
          <img src={user?.avatar} alt="Avatar" className="w-16 h-16 rounded-full object-cover" />
          <div>
            <p className="text-lg font-bold">{user?.fullName || "Unknown"}</p>
            <p className="text-sm text-gray-600 dark:text-gray-300">Email: {user?.email || "N/A"}</p>
          </div>
        </div>

        {/* Th√¥ng tin b√°o c√°o */}
        <div className="text-sm space-y-2">
          <p><strong>M√£ B√°o C√°o:</strong> {report.id}</p>
          <p><strong>M√¥ T·∫£:</strong> {report.reportDescription || "Kh√¥ng c√≥ m√¥ t·∫£"}</p>
          <p><strong>Ng√†y T·∫°o:</strong> {new Date(report.createdDate).toLocaleDateString("vi-VN")}</p>

          {/* Th√¥ng tin ƒë·∫∑t ch·ªó */}
          {booking && (
            <>
              <h3 className="text-lg font-bold mt-4">Th√¥ng tin ƒë·∫∑t ch·ªó</h3>
              <p><strong>M√£ ƒê·∫∑t Ch·ªó:</strong> {booking.id}</p>
              <p><strong>Ng√†y ƒê·∫∑t:</strong> {new Date(booking.createdDate).toLocaleDateString("vi-VN")}</p>
              <p><strong>Gi√°:</strong> ${booking.price}</p>
            </>
          )}
        </div>

        {/* N√∫t Quay l·∫°i */}
        <div className="flex justify-between mt-6">
          <Link to="/manage/reports" className="bg-blue-500 hover:bg-blue-700 text-white px-4 py-2 rounded-lg">
            Quay l·∫°i
          </Link>
        </div>
      </div>
    </div>
  );
};

export default ReportDetail;
